#!/usr/bin/env bash

version="1.1.2"

export SKIM_DEFAULT_OPTIONS="
    --ansi
    --multi
    --tiebreak=length
    --inline-info
    --preview 'paru --color=always -Si {1}'
    --preview-window=right:60%
    --nth 1
    --bind 'tab:toggle'
    --color=pointer:white
"

install() {
    errorMsg=$(mktemp)
    paru -Sl --color=always 2> $errorMsg |\
    awk '{if (NF > 3) {$4 = "\033[1;33m* ";} print $2, $4 $1;}' |\
    sk --prompt="$1:" |\
    awk '{print $NF "/" $1}' |\
    xargs -ro $2
    [ -s $errorMsg ] &&\
    cat $errorMsg &&\
    echo -e "\033[1mError:\033[0m Paru is not functioning properly." \
    "Please check your connection." >&2
    rm -f $errorMsg
}

query() {
    paru $2 --color=always |\
    sk --prompt="$1:" --preview "paru --color=always -Qi {1}" |\
    awk '{print $1}' |\
    xargs -ro $3
}

upgrade() {
    paru -Sy 2> /dev/null
    [ $? -ne 0 ] &&\
    echo -e "\033[1mError:\033[0m Updating the package databases failed." >&2 && exit 7
    echo -e "\033[1m:: Checking for upgradable packages...\033[0m"
    pkgs=$(paru -Qu --color=always 2> /dev/null)
    pkgsCount=$(wc -l <<< "$pkgs")
    [ -z "$pkgs" ] &&\
    echo " there is no upgradable package" && exit 0
    echo " listed $pkgsCount package$( [ "$pkgsCount" -eq 1 ] || echo s )"
    sk --prompt="u:" <<< $pkgs |\
    awk '{print $1}' |\
    xargs -ro paru -S --needed
}

help() {
    prog=$(basename "$0")
    cat << EOF
Info:
    $prog v$version
    A package search TUI for Paru, powered by Skim.
    It can install, upgrade, remove, and query packages.

Usage:
    $prog       -> Default action
    $prog [opt] -> Other options

    The default action is to search for and install packages.
    A '*' indicates that the package is already installed.

Multiple Selection:
    Tab         -> Select / Deselect
    Ctrl + i    -> Select / Deselect

Options:
    h -> Print this message
    p -> Print only; do not install
    u -> Upgrade upgradable packages
    r -> Remove installed packages
    R -> Remove explicitly installed packages
    q -> Show installed packages
    Q -> Show explicitly installed packages
EOF
}

invalidOption() {
    echo -e "\033[1mError:\033[0m Invalid option." \
    "Use '$(basename "$0") -h' for help." >&2
    exit 2
}

[ -n "$2" ] && invalidOption
case $1 in
    "") install ":" "paru -S";;
    -p | p) install "p";;
    -u | u) upgrade;;
    -r | r) query "r" "-Q" "paru -R";;
    -R | R) query "R" "-Qe" "paru -R";;
    -q | q) query "q" "-Q";;
    -Q | Q) query "Q" "-Qe";;
    -h | h | --help) help;; *) invalidOption;;
esac